
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'java'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = pluginVersion
group = pluginGroup
archivesBaseName = pluginName

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile fileTree(dir: 'libraries', include: '*.jar')
    compile 'net.luckperms:api:5.1'

    shadow "net.kyori:adventure-api:4.7.0"
    shadow 'org.spongepowered:configurate-hocon:4.0.0'
    shadow ('net.dv8tion:JDA:4.2.0_247') {exclude module: 'opus-java'}
    // Database connectors
    shadow 'com.zaxxer:HikariCP:2.6.3'
    shadow 'org.mariadb.jdbc:mariadb-java-client:2.0.3'

    minecraft 'net.minecraftforge:forge:1.16.5-36.0.44'
}
jar {
    archiveName  = "${archivesBaseName}-${version}.jar"
    manifest {
        attributes([
                "Specification-Title": pluginId,
                "Specification-Vendor": "dirtcraft",
                "Specification-Version": "1",
                "Implementation-Title": pluginName,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"dirtcraft",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    classifier = null
    archiveName  = "${archivesBaseName}-${version}.jar"
    configurations = [project.configurations.shadow]

    relocate('org.json', 'net.dirtcraft.org.shaded.json')
    relocate('org.apache', 'net.dirtcraft.org.shaded.apache')
    relocate('com.fasterxml', 'net.dirtcraft.org.shaded.fasterxml')
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', pluginId, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
